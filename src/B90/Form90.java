package B90;

import java.awt.HeadlessException;
import java.beans.PropertyChangeEvent;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Patryk
 */
public class Form90 extends javax.swing.JFrame {

    /**
     * Creates new form Form90
     */
    int kasa1,kasa2,kasa3,pula= 0;
    ArrayList<Gracz> gracze = new ArrayList<>();
    ArrayList<Integer> beczki = new ArrayList<>();
    int stawka = 100;
    boolean przyznano1, przyznano2, przyznano3;
    ArrayList<Gracz> prize1 = new ArrayList<>(), prize2 = new ArrayList<>(), prize3 = new ArrayList<>();

    public Form90() {
        initComponents();
        for (int i = 1; i <= 90; i++) {
            beczki.add(i);
        }
        jLabel7.setText("Stawka:" + stawka);
        jLabel4.setText("Nagroda za 1 linię:" + 0);
        jLabel5.setText("Nagroda za 2 linie:" + 0);
        jLabel6.setText("Nagroda za 3 linie:" + 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "B", "I", "N", "G", "O", "90!"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.setName("Krupier"); // NOI18N
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowGrid(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Dodaj Gracza");
        jButton1.setName("Nowy_gracz"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nazwa gracza", "Majętność", "Liczba kuponów"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jButton2.setText("Wycofaj Gracza");
        jButton2.setName("Cofka"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable3.setEnabled(false);
        jScrollPane4.setViewportView(jTable3);

        jButton3.setText("Zacznij Losowanie");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nazwa");

        jLabel2.setText("Kasa");

        jButton4.setText("Dodaj Kupony");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Zabierz kupony");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(jList2);

        jLabel3.setText("Stawka/kupon");

        jButton6.setText("ustaw stawkę");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel4.setText("Nagroda za 1 linię:");
        jLabel4.setToolTipText("");

        jLabel5.setText("Nagroda za 2 linie:");

        jLabel6.setText("Nagroda za 3 linie:");

        jLabel7.setText("Stawka:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel8.setText("....");

        jList3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList3.setEnabled(false);
        jList3.setFocusable(false);
        jScrollPane6.setViewportView(jList3);

        jList4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList4.setEnabled(false);
        jList4.setFocusable(false);
        jScrollPane7.setViewportView(jList4);

        jList5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList5.setEnabled(false);
        jList5.setFocusable(false);
        jScrollPane8.setViewportView(jList5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField1)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(0, 104, Short.MAX_VALUE))
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(136, 136, 136))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel8))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jButton1)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton4)
                                .addComponent(jButton5))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(17, 17, 17))))
        );

        jButton1.getAccessibleContext().setAccessibleName("");
        jButton2.getAccessibleContext().setAccessibleName("");
        jLabel8.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int max_kupon = 0;
        DefaultTableModel tableModew = (DefaultTableModel) jTable3.getModel();
        tableModew.setColumnCount(0);
        tableModew.setRowCount(0);
        jTable3.setModel(tableModew);
        for (Gracz g : gracze) {
            g.inicjuj_kupony();
            DefaultTableModel tableModel = (DefaultTableModel) jTable3.getModel();
            tableModel.addColumn(g.nazwa);
            jTable3.setModel(tableModel);
            if (max_kupon < g.liczba_kuponow) {
                max_kupon = g.liczba_kuponow;
            }
        }
        for (int i = 0; i < max_kupon; i++) {
            DefaultTableModel tableModel = (DefaultTableModel) jTable3.getModel();
            tableModel.addRow(new Object[gracze.size()]);
            tableModel.addRow(new Object[gracze.size()]);
            tableModel.addRow(new Object[gracze.size()]);
        }
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        int index = 0;
        int kupony = 0;
        for (Gracz g : gracze) {
            kupony = kupony + g.liczba_kuponow;
            for (int k = 0; k < g.liczba_kuponow; k++) {
                jTable3.setValueAt("[" + g.kupon.get(k).linia1[0] + "]["
                        + g.kupon.get(k).linia1[1] + "]["
                        + g.kupon.get(k).linia1[2] + "]["
                        + g.kupon.get(k).linia1[3] + "]["
                        + g.kupon.get(k).linia1[4] + "]", k * 3, index);
                jTable3.setValueAt("[" + g.kupon.get(k).linia2[0] + "]["
                        + g.kupon.get(k).linia2[1] + "]["
                        + g.kupon.get(k).linia2[2] + "]["
                        + g.kupon.get(k).linia2[3] + "]["
                        + g.kupon.get(k).linia2[4] + "]", k * 3 + 1, index);
                jTable3.setValueAt("[" + g.kupon.get(k).linia3[0] + "]["
                        + g.kupon.get(k).linia3[1] + "]["
                        + g.kupon.get(k).linia3[2] + "]["
                        + g.kupon.get(k).linia3[3] + "]["
                        + g.kupon.get(k).linia3[4] + "]", k * 3 + 2, index);
            }
            index++;
        }
        kasa1 = pula/7;
        kasa2 = pula/7*2;
        kasa3 = pula/7*4;
        jLabel4.setText("nagroda za 1 linię:"+kasa1);
        jLabel5.setText("nagroda za 2 linie:"+kasa2);
        jLabel6.setText("nagroda za 3 linie:"+kasa3);
        Collections.shuffle(beczki);
        Collections.shuffle(beczki);
        Collections.shuffle(beczki);
        Progres_los progresik = new Progres_los();
        progresik.addPropertyChangeListener((PropertyChangeEvent evt1) -> {
            String name1 = evt1.getPropertyName();
            if (name1.equals("progress")) {
                repaint();
            } else if (name1.equals("state")) {
                SwingWorker.StateValue state1 = (SwingWorker.StateValue) evt1.getNewValue();
                switch (state1) {
                    case DONE:
                        break;
                }
            }
        });
        progresik.execute();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int kasa = Integer.parseInt(jTextField2.getText());

            if (kasa > 0) {
                Gracz nowy = new Gracz(jTextField1.getText(), kasa);

                gracze.add(nowy);
                DefaultListModel model = new DefaultListModel();
                gracze.forEach((g) -> {
                    model.addElement(g.nazwa);
                });
                jList2.setModel(model);
                jList1.setModel(model);
                jTextField1.setText("");
                jTextField2.setText("");
                DefaultTableModel modeltgraczy = (DefaultTableModel) jTable2.getModel();
                modeltgraczy.addRow(new Object[]{nowy.nazwa, nowy.kasa, 0});
            } else {
                JOptionPane.showMessageDialog(rootPane, "Ilość kasy nie jest liczbą całkowitą większą od 0");
            }
        } catch (HeadlessException | NumberFormatException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Ilość kasy nie jest liczbą całkowitą większą od 0");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int index = 0;
        for (Gracz g : gracze) {
            if (g.nazwa.equals(jList2.getSelectedValue())) {
                gracze.remove(g);
                DefaultListModel model = new DefaultListModel();
                gracze.forEach((ng) -> {
                    model.addElement(ng.nazwa);
                });
                jList2.setModel(model);
                jList1.setModel(model);
                DefaultTableModel modeltgraczy = (DefaultTableModel) jTable2.getModel();
                modeltgraczy.removeRow(index);
                break;
            }
            index++;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            int index = 0;
            for (Gracz g : gracze) {
                if (g.nazwa.equals(jList1.getSelectedValue())) {
                    if (gracze.get(index).kasa >= stawka * Integer.parseInt(jTextField3.getText())) {
                        gracze.get(index).liczba_kuponow = gracze.get(index).liczba_kuponow + Integer.parseInt(jTextField3.getText());
                        gracze.get(index).kasa = gracze.get(index).kasa - stawka * Integer.parseInt(jTextField3.getText());
                        jTable2.setValueAt(gracze.get(index).kasa, index, 1);
                        jTable2.setValueAt(gracze.get(index).liczba_kuponow, index, 2);
                        pula = pula + stawka * Integer.parseInt(jTextField3.getText());
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "za mało kasy na daną ilość kuponów");
                    }
                    break;
                }
                index++;
            }

        } catch (HeadlessException | NumberFormatException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Ilość kuponów nie jest liczbą całkowitą większą od 0");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            int index = 0;
            for (Gracz g : gracze) {
                if (g.nazwa.equals(jList1.getSelectedValue())) {
                    if (Integer.parseInt(jTextField3.getText()) <= gracze.get(index).liczba_kuponow) {
                        gracze.get(index).liczba_kuponow = gracze.get(index).liczba_kuponow - Integer.parseInt(jTextField3.getText());
                        gracze.get(index).kasa = gracze.get(index).kasa + stawka * Integer.parseInt(jTextField3.getText());
                        jTable2.setValueAt(gracze.get(index).kasa, index, 1);
                        jTable2.setValueAt(gracze.get(index).liczba_kuponow, index, 2);
                         pula = pula - stawka * Integer.parseInt(jTextField3.getText());
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "za duża ilość kuponów do odebrania");
                    }
                    break;
                }
                index++;
            }

        } catch (HeadlessException | NumberFormatException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Ilość kuponów nie jest liczbą całkowitą większą od 0");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            int nowa_stawka = Integer.parseInt(jTextField4.getText());
            gracze.stream().map((g) -> {
                g.kasa = g.kasa + stawka * g.liczba_kuponow;
                return g;
            }).forEachOrdered((g) -> {
                g.liczba_kuponow = 0;
            });
            for (int index = 0; index < gracze.size(); index++) {
                jTable2.setValueAt(gracze.get(index).kasa, index, 1);
                jTable2.setValueAt(gracze.get(index).liczba_kuponow, index, 2);
            }
            stawka = nowa_stawka;
            jLabel7.setText("Stawka:" + stawka);

        } catch (NumberFormatException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Stawka nie jest liczbą całkowitą większą od 0");
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form90.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Form90().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private class Progres_los extends SwingWorker<Object, Object> {

        public Progres_los() {
        }

        @Override
        protected Object doInBackground() throws Exception {
            prize1.clear();
            prize2.clear();
            prize3.clear();
            
            jProgressBar1.setMaximum(90);
            jProgressBar1.setMinimum(0);
            for (int b = 0; b < 90; b++) {
                jProgressBar1.setValue(b + 1);
                repaint();
                int biezaca = beczki.get(b);
                jLabel8.setText(String.valueOf(biezaca));
                for (int x = 0; x < 6; x++) {
                    for (int y = 0; y < 15; y++) {
                        if (biezaca == y+1+15*x) {
                            jTable1.setValueAt(y+1+15*x, y, x);
                        }
                    }
                }
                int x = 0, y = 0;
                boolean przerwa;
                for (Gracz g : gracze) {
                    boolean n1 = false, n2 = false, n3 = false;
                    for (int k = 0; k < g.liczba_kuponow; k++) {
                        g.kupon.get(k).wykresl_liczbe(biezaca);
                        switch (g.kupon.get(k).ostatnie_trafienie) {
                            case 1:
                                jTable3.setValueAt("[" + g.kupon.get(k).linia1[0] + "]["
                                        + g.kupon.get(k).linia1[1] + "]["
                                        + g.kupon.get(k).linia1[2] + "]["
                                        + g.kupon.get(k).linia1[3] + "]["
                                        + g.kupon.get(k).linia1[4] + "]", k * 3, x);
                                break;
                            case 2:
                                jTable3.setValueAt("[" + g.kupon.get(k).linia2[0] + "]["
                                        + g.kupon.get(k).linia2[1] + "]["
                                        + g.kupon.get(k).linia2[2] + "]["
                                        + g.kupon.get(k).linia2[3] + "]["
                                        + g.kupon.get(k).linia2[4] + "]", k * 3 + 1, x);
                                break;
                            case 3:
                                jTable3.setValueAt("[" + g.kupon.get(k).linia3[0] + "]["
                                        + g.kupon.get(k).linia3[1] + "]["
                                        + g.kupon.get(k).linia3[2] + "]["
                                        + g.kupon.get(k).linia3[3] + "]["
                                        + g.kupon.get(k).linia3[4] + "]", k * 3 + 2, x);
                                break;

                        }
                        
                        if (przyznano1 == false) {
                            if (g.kupon.get(k).jedna_linia==true && n1 == false) {
                                prize1.add(g);
                                n1 = true;
                            }
                        }
                         if (przyznano2 == false) {
                            if (g.kupon.get(k).dwie_linie==true && n2 == false) {
                                prize2.add(g);
                                n2 = true;
                            }
                        }
                          if (przyznano3 == false) {
                            if (g.kupon.get(k).trzy_linie==true && n3 == false) {
                                prize3.add(g);
                                n3 = true;
                            }
                        }
                         
                    }
                    x++;
                }
                if(prize1.isEmpty()==false){
                    przyznano1 = true;
                     jLabel4.setText("pryznano graczom:"+prize1.size()+"("+kasa1/prize1.size()+")");
                     DefaultListModel model = new DefaultListModel();
                prize1.forEach((g) -> {
                    model.addElement(g.nazwa);
                });
                jList3.setModel(model);
                    
                }
                if(prize2.isEmpty()==false){
                    przyznano2 = true;
                    jLabel5.setText("pryznano graczom:"+prize2.size()+"("+kasa2/prize2.size()+")");
                          DefaultListModel model = new DefaultListModel();
                prize2.forEach((g) -> {
                    model.addElement(g.nazwa);
                });
                jList4.setModel(model);
                }
                if(prize3.isEmpty()==false){
                    przyznano3 = true;
                    jLabel6.setText("pryznano graczom:"+prize3.size()+"("+kasa3/prize3.size()+")");
                          DefaultListModel model = new DefaultListModel();
                prize3.forEach((g) -> {
                    model.addElement(g.nazwa);
                });
                jList5.setModel(model);
                    break;
                }
                
                Thread.sleep(1000);
                
            }
            prize1.forEach((g) -> {
                gracze.stream().filter((p) -> (g.equals(p))).forEachOrdered((p) -> {
                    p.kasa = p.kasa+kasa1/prize1.size();
                });
            });
            prize2.forEach((g) -> {
                gracze.stream().filter((p) -> (g.equals(p))).forEachOrdered((p) -> {
                    p.kasa = p.kasa+kasa2/prize2.size();
                });
            });
            prize3.forEach((g) -> {
                gracze.stream().filter((p) -> (g.equals(p))).forEachOrdered((p) -> {
                    p.kasa = p.kasa+kasa3/prize3.size();
                });
            });
         int indexf = 0;
          for(Gracz g : gracze){
              jTable2.setValueAt(g.kasa, indexf, 1);
              g.kupon.clear();
              g.liczba_kuponow = 0;
              jTable2.setValueAt(g.liczba_kuponow, indexf, 2);
              indexf++;
          }
          jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        for (int x = 0; x < 6; x++) {
                    for (int y = 0; y < 15; y++) {
                        
                            jTable1.setValueAt(" ", y, x);
                      
                    }
                }
            return null;
        }
    }
}
